type: object
description: |
  Request to create an invoice, which is a list of goods or services with a statement of the sum due provided
  by the merchant, that a buyer intends to purchase
required:
  - amount
properties:
  isEmailDelivery:
    type: boolean
    description: indicates if invoice will be email delivered, deaults to false
    default: false
  emailDelivery:
    type: object
    properties:
      to:
        type: string
        description: the email to field, multiple addresses separated by semicolons
      cc:
        type: string
        description: the email to field, multiple addresses separated by semicolons
      bcc:
        type: string
        description: the email to field, multiple addresses separated by semicolons
  description:
    type: string
    description: the purchase description, can be provided instead of a list of items
  amount:
    type: object
    properties:
      breakdown:
        type: object
        properties:
          subtotal:
            $ref: ../../globalTypes/globalAmount.yaml
          shipping:
            $ref: ../../globalTypes/globalAmount.yaml
          handling:
            $ref: ../../globalTypes/globalAmount.yaml
          taxTotal:
            $ref: ../../globalTypes/globalAmount.yaml
          discount:
            $ref: ../../globalTypes/globalAmount.yaml
      currencyId:
        type: string
        description: original currency od of the item
      contractAddress:
        type: string
        description: 'address of the smart contract of the invoice currency, (if applicable)'
      displayValue:
        type: string
        description: 'value in the invoice currency in the original format (e.g 0.1234 BTC)'
      value:
        type: string
        description: '?'
      valueAsDecimal:
        type: string
        description: '?'
  clientId:
    type: string
    description: the id of the client creating this invoice
  invoiceDate:
    type: string
    description:
      custom invoice date if not the created date of the invoice,
      invoices with a future date will be scheduled
    example: '2022-11-28T13:59:46+00:00'
  dueDate:
    type: string
    example: '2023-04-26T18:40:41.322Z'
    description: due date to be shown on the invoice
  invoiceId:
    type: string
    description: invoice number. Appears in screens shown to the Buyer and emails sent.
  buyer:
    $ref: ./buyer.yaml
  shipping:
    $ref: ../../globalTypes/shipping.yaml
  items:
    type: array
    items:
      $ref: ./items.yaml
  requireBuyerNameAndEmail:
    type: boolean
    description: flag indicating whether a buyer name and email are required, they will be requested at checkout if not provider by the caller.

  buyerDataCollectionMessage:
    type: string
    description: the message to display when collecting buyer user data
  notes:
    type: string
    description: notes for the merchant only, these are not visible to the buyers
  notesToRecipient:
    type: string
    description: any additional information to share with the buyer about the transaction
  termsAndConditions:
    type: string
    description: any terms and conditions, e.g. a cancellation policy
  merchantOptions:
    $ref: ./merchantOptions.yaml
  customOptions:
    type: object
    description: any custom data the caller wishes to attach to the invoice which will be sent back in notifications
    properties:
      additionalProp1:
        type: string
      additionalProp2:
        type: string
      additionalProp3:
        type: string
  metadata:
    type: object
    properties:
      integration:
        type: string
        description: '?'
        format: 'InvoiceBuilder'
      hostname:
        type: string
        description: '?'
  poNumber:
    type: string
    format: InvoiceBuilder
  webhook:
    $ref: ../webhooks/webhookSchema.yaml
  draft:
    type: boolean
    description: flag indicating whether this is a draft invoice
    default: false
  payoutConfig:
    type: object
    description: Represents info specifying payout configuration for invoice
    properties:
      currencyId:
        type: string
        description: the currency id of the wallet or address into which to payout to
      contractAddress:
        type: string
        description: address of the smart contract if the currency supports it and it should be used
      address:
        type: string
        description: the external address into which to pay out
      frequency:
        type: array
        example: [
          'normal',
          'asSoonAsPossible',
          'hourly',
          'nightly',
          'weekly'
        ]
type: object
description: Request to create a buy-now button, which allows for quick checkout for goods or services with a statement of the
  sum due, that are offered by the merchant, and that a buyer intends to purchase
required:
  - amount
properties:
  successUrl:
    type: string
    description: the url to redirect to once an invoice is successfully paid
  cancelUrl:
    type: string
    description: the url to redirect to, if payment of an invoice fails (e.g. expired) or is cancelled by the user
  ipnUrl:
    type: string
    description: the url for receiving webhooks on payment
  notifications:
    type: array
    description: comma separated list of strings designating notification types to be sent as webhooks for the payment. 
      Available values are invoiceCreated, invoicePending, invoicePaid, invoiceCompleted, invoiceCancelled, invoiceTimedOut.
      If the list of notification events that merchant wants to receive is not provided, the merchant will receive a 
      "bad request" error in the response
  emailNotifications:
    type: boolean
    description: flag indicating whether to send an email notification once payment completes successfully
  buttonWidth:
    type: string
    description: width of the created button in pixels
    example: '252'
  buttonStyle:
    type: string
    description: style of the button; possible values are "white", "black", "blackblue", "blue", "white_square", "black_square",
      "blackblue_square", "blue_square", "white_big", "black_big", "blackblue_big", "blue_big"
  items:
    type: array
    description: array of items that a buyer intends to purchase from the merchant
    items:
      $ref: ./items.yaml
  amount:
    type: object
    required:
      - breakdown
      - currencyId
      - value
    description: detailed amount of purchase with the breakdown of all fees
    properties:
      breakdown:
        type: object
        properties:
          subtotal:
            description: sum of purchased items
            $ref: ../../globalTypes/globalAmount.yaml
          shipping:
            description: cost of shipping
            $ref: ../../globalTypes/globalAmount.yaml
          handling:
            description: service cost for processing order
            $ref: ../../globalTypes/globalAmount.yaml
          taxTotal:
            description: tax cost
            $ref: ../../globalTypes/globalAmount.yaml
          discount:
            description: discount amount
            $ref: ../../globalTypes/globalAmount.yaml
      currencyId:
        type: string
        description: original currency Id of the item
      contractAddress:
        type: string
        description: the address of the contract if this money object represents an ERC20 or similar token value
      displayValue:
        type: string
        description: the value formatted for display (e.g 0.1234 BTC)
      value:
        type: string
        description: this parameter represents the monetary value as an integer in the base (smallest) unit of the currency. For instance, Bitcoin can be divided into 8 decimal places,
          with each division known as a Satoshi. Therefore, 1 BTC would have a value of 100,000,000 Satoshis, and 0.00031 BTC would have a value of 31,000 Satoshis. Similarly,
          an amount of $9.99 USD would be represented as 999 cents. In the case of zero-decimal currencies like the Yen, a value of Â¥500 would be represented as 500.
          If no value is provided, the default is 0
        example: '20000'
      valueAsDecimal:
        type: string
        description: the decimal value represents the monetary value with decimal precision derived from the value field,
          which is the integer representation in the smallest unit of the currency or token.
        example: 20000
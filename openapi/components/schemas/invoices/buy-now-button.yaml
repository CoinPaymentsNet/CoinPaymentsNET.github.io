type: object
description: Request to create a buy-now button, which allows for quick checkout for goods or services with a statement of the
  sum due, that are offered by the merchant, and that a buyer intends to purchase
required:
  - amount
properties:
  successUrl:
    type: string
    description: the url to redirect to once an invoice is successfully paid
  cancelUrl:
    type: string
    description: the url to redirect to, if payment of an invoice fails (e.g. expired) or is cancelled by the user
  ipnUrl:
    type: string
    description: the url for receiving webhooks on payment
  emailNotifications:
    type: boolean
    description: flag indicating whether to send an email notification once payment completes successfully
  buttonWidth:
    type: string
    description: width of the created button
  buttonStyle:
    type: string
    description: style of the button
  isEmailDelivery:
    type: boolean
    description: default value to be used for white labeling checkout flow. For invoice document delivery indicates if invoice will be email delivered
    default: false
  emailDelivery:
    type: object
    description: email addresses to be used for invoice delivery
    properties:
      to:
        type: string
        description: to email address. The value can take multiple addresses separated by semicolons
      cc:
        type: string
        description: field to add multiple recipients separated by semicolons
      bcc:
        type: string
        description: bcc field similar to "cc" field except that other recipients won't be able to see that someone else has been sent a copy of the email
  dueDate:
    type: string
    example: '2023-04-26T18:40:41.322Z'
    description: date until invoice is due
  invoiceDate:
    type: string
    example: '2022-11-28T13:59:46+00:00'
    description: to be used for invoice doc email delivery. Date when invoice is to be mailed out to the user
  draft:
    type: boolean
    description: Default value to be used for whitelabeling checkout flow. flag indicating whether this is a draft invoice
    default: false
  clientId:
    type: string
    description: the id of the client (merchant) creating this invoice
  invoiceId:
    type: string
    description: default value to be used for whitelabeling checkout flow. For invoice document delivery invoice number assigned by the merchant
    default: false
  buyer:
    $ref: ./buyer.yaml
  description:
    type: string
    description: the purchase description, can be provided instead of a list of items
  items:
    type: array
    description: array of items that a buyer intends to purchase from the merchant
    items:
      $ref: ./items.yaml
  amount:
    type: object
    description: detailed amount of purchase with the breakdown of all fees
    properties:
      breakdown:
        type: object
        properties:
          subtotal:
            description: sum of purchased items
            $ref: ../../globalTypes/globalAmount.yaml
          shipping:
            description: cost of shipping
            $ref: ../../globalTypes/globalAmount.yaml
          handling:
            description: service cost for processing order
            $ref: ../../globalTypes/globalAmount.yaml
          taxTotal:
            description: tax cost
            $ref: ../../globalTypes/globalAmount.yaml
          discount:
            description: discount amount
            $ref: ../../globalTypes/globalAmount.yaml
      currencyId:
        type: string
        description: original currency Id of the item
      contractAddress:
        type: string
        description: the address of the contract if this money object represents an ERC20 or similar token value
      displayValue:
        type: string
        description: the value formatted for display (e.g 0.1234 BTC)
      value:
        type: string
        description: this parameter represents the monetary value as an integer in the base (smallest) unit of the currency. For instance, Bitcoin can be divided into 8 decimal places,
          with each division known as a Satoshi. Therefore, 1 BTC would have a value of 100,000,000 Satoshis, and 0.00031 BTC would have a value of 31,000 Satoshis. Similarly,
          an amount of $9.99 USD would be represented as 999 cents. In the case of zero-decimal currencies like the Yen, a value of ¥500 would be represented as 500.
          If no value is provided, the default is 0
      valueAsDecimal:
        type: string
        description: the decimal value represents the monetary value with decimal precision derived from the value field,
          which is the integer representation in the smallest unit of the currency or token.
  shipping:
    description: shipping method info
    $ref: ../../globalTypes/shipping.yaml
  requireBuyerNameAndEmail:
    type: boolean
    description: flag indicating whether a buyer name and email are required, they will be requested at checkout if not provider by the caller.
  buyerDataCollectionMessage:
    type: string
    description: the message to display when collecting buyer user data
  notes:
    type: string
    description: notes for the merchant only, these are not visible to the buyers
  notesToRecipient:
    type: string
    description: any additional information to share with the buyer about the transaction
  termsAndConditions:
    type: string
    description: any terms and conditions, e.g. a cancellation policy
  merchantOptions:
    description: merchant's details to be shown on the invoice
    $ref: ./merchantOptions.yaml
  customData:
    type: object
    description: any custom data merchant wishes to attach to the invoice that may be further used for custom merchant's purposes. Not visible on UI for buyers
    properties:
      additionalProp1:
        type: string
      additionalProp2:
        type: string
      additionalProp3:
        type: string
  metadata:
    type: object
    properties:
      integration:
        type: string
        description: integration name
        format: InvoiceBuilder
      hostname:
        type: string
        description: server name of the integration API
  poNumber:
    type: string
    description: optional Purchase order number on the integration API.
    format: InvoiceBuilder
  webhooks:
    description: data on webhooks sent for invoices
    $ref: ../webhooks/webhookSchema.yaml
  payoutConfig:
    type: object
    description: configs for payout for this particular invoice. Overrides account payout configs
    properties:
      currencyId:
        type: string
        description: the currency Id of the wallet or address into which to payout to
      contractAddress:
        type: string
        description: the address of the contract if this money object represents an ERC20 or similar token value
      address:
        type: string
        description: the external address into which to pay out to
      frequency:
        type: array
        description: frequency of payout execution. Possible values of the array - 'normal', 'asSoonAsPossible', 'hourly', 'nightly', 'weekly'
        example: ['normal',
                  'asSoonAsPossible',
                  'hourly',
                  'nightly',
                  'weekly'
        ]
  payment:
    type: object
    description: the field contains additional data specific for white labeled payments, e.g. buyer's email that is used
      for possible refunds
    properties:
      refundEmail:
        type: string
        description: Provide the buyer’s email address to create a white-labeling payment flow. **Note**, the email is
          only used for transaction status updates and refunds; never for marketing purposes
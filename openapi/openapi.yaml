openapi: 3.1.0
info:
  version: ''
  title: CoinPayments API Documentation
  x-logo:
    url: ./logo.png
  description:
    # TODO FIX CODE EXAMPLE
    $ref: ./info-description.md
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: Authentication
    description:
      $ref: './paths/auth/auth.md'
  - name: Currencies API
    description:
      $ref: './paths/currencies/currencies-description.md'
  - name: Rates API
    description: "API for rates supported by CoinPayments."
  - name: Invoices API
    description:
      $ref: './paths/invoices/invoice-description.md'
  - name: Wallets API
    description:
      $ref: './paths/wallets/wallets-description.md'
  - name: Invoice Webhooks API
    description:
      $ref: 'paths/webhooks/webhooks.md'

servers:
  - url: 'https://api.coinpayments.com/api/v1'
paths:

  # Currencies
  '/currencies':
    $ref: 'paths/currencies/get-currencies.yaml'
  '/currencies/{id}':
    $ref: 'paths/currencies/get-currency-by-id.yaml'
  '/currencies/blockchain-nodes/{id}/latest-block-number':
    $ref: 'paths/currencies/get-latest-block-number.yaml'
  '/currencies/conversions':
    $ref: 'paths/currencies/conversions.yaml'
  '/currencies/required-confirmations':
    $ref: 'paths/currencies/required-confirmations.yaml'

  # Fees
  '/fees/blockchain/{currency}':
    $ref: 'paths/fees/blockchain-fee.yaml'

  # Invoices
  '/merchant/invoices':
    $ref: 'paths/invoices/invoices.yaml'
  '/merchant/invoices/buy-now-button':
    $ref: 'paths/invoices/create-buy-button.yaml'
  '/invoices/{id}/payment-currencies/{currencyId}':
    $ref: 'paths/invoices/get-payment-address.yaml'
  '/invoices/{id}/payment-currencies/{currencyId}/status':
    $ref: 'paths/invoices/get-payment-status.yaml'
  '/merchant/invoices/{id}':
    $ref: 'paths/invoices/get-by-id.yaml'
  '/merchant/invoices/{id}/payouts':
    $ref: 'paths/invoices/payouts.yaml'
  '/merchant/invoices/{id}/history':
    $ref: 'paths/invoices/history.yaml'

  # Wallets
  '/merchant/wallets/your-server-url':
    $ref: 'paths/wallets/wallet-webhook-payload.yaml'
  '/merchant/wallets':
    $ref: 'paths/wallets/create-wallet.yaml'
  '/merchant/wallets/{walletIdStr}':
    $ref: 'paths/wallets/get-wallet-by-id.yaml'
  '/merchant/wallets/{walletIdStr}/webhook':
    $ref: 'paths/wallets/update-wallet-webhook-url.yaml'
  '/merchant/wallets/{walletIdStr}/addresses':
    $ref: 'paths/wallets/create-and-get-addresses.yaml'
  '/merchant/wallets/{walletIdStr}/addresses/{addressIdStr}':
    $ref: 'paths/wallets/get-address-by-id.yaml'
  '/merchant/wallets/{walletIdStr}/addresses/{addressIdStr}/webhook':
    $ref: 'paths/wallets/update-address-webhook-url.yaml'
  '/merchant/wallets/{walletIdStr}/transactions':
    $ref: 'paths/wallets/get-wallet-transactions.yaml'
  '/merchant/wallets/{walletIdStr}/transaction':
    $ref: 'paths/wallets/get-wallet-transaction.yaml'
  '/merchant/wallets/{walletIdStr}/consolidation/{toWalletIdStr}':
    $ref: 'paths/wallets/create-wallet-consolidation.yaml'
  '/merchant/wallets/{walletIdStr}/consolidation':
    $ref: 'paths/wallets/get-wallet-consolidation.yaml'
  '/merchant/wallets/consolidation-preview':
    $ref: 'paths/wallets/create-wallets-consolidation-preview.yaml'
  '/merchant/wallets/consolidation/{toWalletIdStr}':
    $ref: 'paths/wallets/create-wallets-consolidation.yaml'
  '/merchant/wallets/{walletIdStr}/spend/request':
    $ref: 'paths/wallets/spend-request.yaml'
  '/merchant/wallets/{walletIdStr}/spend/confirmation':
    $ref: 'paths/wallets/spend-request-confirmation.yaml'



  # Clients
  '/merchant/your-server-url':
    $ref: 'paths/webhooks/webhook-payload.yaml'
  '/merchant/clients/{clientId}/webhooks':
    $ref: 'paths/webhooks/webhook.yaml'
  '/merchant/clients/{clientId}/webhooks/{webhookId}':
    $ref: 'paths/webhooks/update-delete.yaml'

  # Rates
  '/rates':
    $ref: 'paths/rates/rates.yaml'


components:
  securitySchemes:
    main_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: 'http://example.com/api/oauth/dialog'
          scopes:
            'read:users': read users info
            'write:users': modify or remove users
    api_key:
      type: apiKey
      in: header
      name: api_key
    basic_auth:
      type: http
      scheme: basic